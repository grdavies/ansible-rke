# roles/rke_generate_config/tasks/create_ntnx_csi_config.yml
---
  - name: create csi config dir
    file:
      path: "{{ ntnx_csi_conf_dir }}"
      state: directory

  - name: generate "{{ ntnx_csi_conf_dir }}/ntnx-csi-rbac.yaml"
    ansible.builtin.template:
      src: templates/ntnx-csi-rbac.yaml
      dest: "{{ ntnx_csi_conf_dir }}/ntnx-csi-rbac.yaml"
      owner: nutanix
      group: nutanix
      mode: '0600'

  - name: generate "{{ ntnx_csi_conf_dir }}/ntnx-csi-node.yaml"
    ansible.builtin.template:
      src: templates/ntnx-csi-node.yaml
      dest: "{{ ntnx_csi_conf_dir }}/ntnx-csi-node.yaml"
      owner: nutanix
      group: nutanix
      mode: '0600'

  - name: generate "{{ ntnx_csi_conf_dir }}/ntnx-csi-provisioner.yaml"
    ansible.builtin.template:
      src: templates/ntnx-csi-provisioner.yaml
      dest: "{{ ntnx_csi_conf_dir }}/ntnx-csi-provisioner.yaml"
      owner: nutanix
      group: nutanix
      mode: '0600'

  - name: generate "{{ ntnx_csi_conf_dir }}/csi-driver.yaml"
    ansible.builtin.template:
      src: templates/csi-driver.yaml
      dest: "{{ ntnx_csi_conf_dir }}/csi-driver.yaml"
      owner: nutanix
      group: nutanix
      mode: '0600'

  - name: generate b64 encoded string for secret
    set_fact:
      auth_string_b64: "{{ auth_string | b64encode}}"

  - name: generate "{{ ntnx_csi_conf_dir }}/ntnx-csi-secret.yaml"
    ansible.builtin.template:
      src: templates/ntnx-csi-secret.yaml
      dest: "{{ ntnx_csi_conf_dir }}/ntnx-csi-secret.yaml"
      owner: nutanix
      group: nutanix
      mode: '0600'

  - name: generate "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-volumes.yaml"
    ansible.builtin.template:
      src: templates/ntnx-csi-sc-volumes.yaml
      dest: "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-volumes.yaml"
      owner: nutanix
      group: nutanix
      mode: '0600'
    when: volumesClass

  - name: set fact volumes_include_path
    set_fact:
      volumes_include_path: "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-volumes.yaml"
    when: volumesClass

  - name: add "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-volumes.yaml" to rke addons list
    set_fact:
      addons_include: "{{ addons_include + [ volumes_include_path ] }}"
    when: volumesClass

  - name: generate "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-files.yaml"
    ansible.builtin.template:
      src: templates/ntnx-csi-sc-files.yaml
      dest: "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-files.yaml"
      owner: nutanix
      group: nutanix
      mode: '0600'
    when: filesClass

  - name: set fact files_include_path
    set_fact:
      files_include_path: "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-files.yaml"
    when: filesClass

  - name: add "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-volumes.yaml" to rke addons list
    set_fact:
      addons_include: "{{ addons_include + [ files_include_path ] }}"
    when: filesClass

  - name: generate "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-files-dynamic.yaml"
    ansible.builtin.template:
      src: templates/ntnx-csi-sc-files-dynamic.yaml
      dest: "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-files-dynamic.yaml"
      owner: nutanix
      group: nutanix
      mode: '0600'
    when: filesDynamicClass

  - name: set fact files_dynamic_include_path
    set_fact:
      files_dynamic_include_path: "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-files-dynamic.yaml"
    when: filesDynamicClass

  - name: add "{{ ntnx_csi_conf_dir }}/ntnx-csi-sc-volumes.yaml" to rke addons list
    set_fact:
      addons_include: "{{ addons_include + [ files_dynamic_include_path ] }}"
    when: filesDynamicClass

  - debug:
      var: addons_include
      verbosity: 2
