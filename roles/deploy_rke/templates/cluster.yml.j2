nodes:
{% for controlplane_vm in groups['controlplane'] %}
- address: {{ controlplane_vm }}
  port: "{{ port }}"
  internal_address: ""
  role:
  - controlplane
  hostname_override: ""
  user: {{ user }}
  docker_socket: {{ docker_socket }}
  ssh_key: ""
  ssh_key_path: {{ ssh_key_path }}
  ssh_cert: ""
  ssh_cert_path: ""
  labels: { {% if dns_provider in ["coredns", "kube-dns"] %}app: dns{% endif %} }
  taints: []
{% endfor %}
{% for etcd_vm in groups['etcd'] %}
- address: {{ etcd_vm }}
  port: "{{ port }}"
  internal_address: ""
  role:
  - etcd
  hostname_override: ""
  user: {{ user }}
  docker_socket: {{ docker_socket }}
  ssh_key: ""
  ssh_key_path: {{ ssh_key_path }}
  ssh_cert: ""
  ssh_cert_path: ""
  labels: {}
  taints: []
{% endfor %}
{% for worker_vm in groups['workers'] %}
- address: {{ worker_vm }}
  port: "{{ port }}"
  internal_address: ""
  role:
  - controlplane
  - etcd
  hostname_override: ""
  user: {{ user }}
  docker_socket: {{ docker_socket }}
  ssh_key: ""
  ssh_key_path: {{ ssh_key_path }}
  ssh_cert: ""
  ssh_cert_path: ""
  labels: { {% if ingress in ["nginx"] %}app: ingress{% endif %} }
  taints: []
{% endfor %}

ignore_docker_version: {{ ignore_docker_version }}
enable_cri_dockerd: {{ enable_cri_dockerd }}
ssh_key_path: {{ ssh_key_path }}
ssh_agent_auth: {{ ssh_agent_auth }}
cluster_name: {{ cluster_name }}
addon_job_timeout: {{ addon_job_timeout }}

# For RKE v0.3.0 and above, the map of Kubernetes versions and their system images is
# located here:
# https://github.com/rancher/kontainer-driver-metadata/blob/master/rke/k8s_rke_system_images.go
kubernetes_version: "{{ kubernetes_version }}"

{% if private_registries is defined %}
private_registries:
{% for registry in private_registries %}
  - url: {{ registry.url }}
    user: {{ registry.user }}
    password: {{ registry.password }}
    is_default: {{ registry.is_default }}
{% endfor %}
{% endif %}

{% if bastion_host is defined %}
bastion_host:
    address: {{ bastion_host.address }}
    user: {{ bastion_host.user }}
    port: {{ bastion_host.port }}
    ssh_key_path: {{ bastion_host.ssh_key_path }}
{% endif %}

{% if system_images is defined %}
system_images:
    kubernetes: {{ system_images.kubernetes }}
    etcd: {{ system_images.etcd }}
    alpine: {{ system_images.alpine }}
    nginx_proxy: {{ system_images.nginx_proxy }}
    cert_downloader: {{ system_images.cert_downloader }}
    kubernetes_services_sidecar: {{ system_images.kubernetes_services_sidecar }}
    kubedns: {{ system_images.kubedns }}
    dnsmasq: {{ system_images.dnsmasq }}
    kubedns_sidecar: {{ system_images.kubedns_sidecar }}
    kubedns_autoscaler: {{ system_images.kubedns_autoscaler }}
    pod_infra_container: {{ system_images.pod_infra_container }}
{% endif %}

{% if authentication is defined %}
authentication:
    strategy: {{ authentication.strategy}}
    sans: {{ authentication.sans}}
{% endif %}

{% if authorization is defined %}
authorization:
    mode: {{ authorization.mode}}
{% endif %}

{% if cloud_provider is defined %}
cloud_provider:
    name: {{ cloud_provider.name }}
{% endif %}

{% if network_plugin is not defined %}
network:
  plugin: none
{% endif %}
{% if network_plugin == "none" %}
network:
  plugin: none
{% endif %}
{% if network_plugin == "canal" %}
network:
  plugin: canal
  mtu: 1400
  options:
    canal_iface: {{ iface }}
    canal_flannel_backend_type: {{ backend_type }}
    canal_autoscaler_priority_class_name: system-cluster-critical
    canal_priority_class_name: system-cluster-critical
  tolerations:
  - key: "node.kubernetes.io/unreachable"
    operator: "Exists"
    effect: "NoExecute"
    tolerationseconds: 300
  - key: "node.kubernetes.io/not-ready"
    operator: "Exists"
    effect: "NoExecute"
    tolerationseconds: 300
{% endif %}
{% if network_plugin == "flannel" %}
network:
  plugin: flannel
  options:
    flannel_iface: {{ iface }}
    flannel_backend_type: {{ backend_type }}
    flannel_autoscaler_priority_class_name: system-cluster-critical
    flannel_priority_class_name: system-cluster-critical
{% endif %}
{% if network_plugin == "calico" %}
network:
  plugin: calico
  options:
    calico_cloud_provider: {{ calico_cloud_provider }}
    calico_autoscaler_priority_class_name: system-cluster-critical
    calico_priority_class_name: system-cluster-critical
  tolerations:
  - key: "node.kubernetes.io/unreachable"
    operator: "Exists"
    effect: "NoExecute"
    tolerationseconds: 300
  - key: "node.kubernetes.io/not-ready"
    operator: "Exists"
    effect: "NoExecute"
    tolerationseconds: 300
{% endif %}
{% if network_plugin == "weave" %}
network:
  plugin: weave
  options:
    weave_autoscaler_priority_class_name: system-cluster-critical
    weave_priority_class_name: system-cluster-critical
  {% if weave_password is defined %}
  weave_network_provider:
    password: {{ weave_password }}
  {% endif %}
{% endif %}

{% if dns_provider == "none" %}
dns:
  provider: none
{% else %}
dns:
  provider: {{ dns_provider }}
  options:
    coredns_autoscaler_priority_class_name: system-cluster-critical
    coredns_priority_class_name: system-cluster-critical
  upstreamnameservers: {{ upstream_dns_servers }}
  update_strategy:
    strategy: RollingUpdate
    rollingUpdate:
      maxUnavailable: 20%
      maxSurge: 15%
  linear_autoscaler_params:
    cores_per_replica: 0.34
    nodes_per_replica: 4
    prevent_single_point_failure: true
    min: 2
    max: 3
  tolerations:
  - key: "node.kubernetes.io/unreachable"
    operator: "Exists"
    effect: "NoExecute"
    tolerationseconds: 300
  - key: "node.kubernetes.io/not-ready"
    operator: "Exists"
    effect: "NoExecute"
    tolerationseconds: 300
  node_selector:
    app: dns
{% endif %}

monitoring:
  provider: ""
  options: {}
  node_selector: {}
  update_strategy: null
  replicas: null
  tolerations: []
  metrics_server_priority_class_name: ""

{% if ingress is not defined %}
ingress:
  provider: none
{% else %}

{% if ingress == "none" %}
ingress:
  provider: none
{% else %}
ingress:
  provider: nginx
  node_selector:
    app: ingress
  # Available as of v1.1.0
  update_strategy:
    strategy: RollingUpdate
    rollingUpdate:
      maxUnavailable: 5
{% endif %}

{% endif %}

addons_include: {{ addons_include }}
